/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controller.AcolhimentoController;
import controller.Log;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author LuizFritsch
 */
public class Acolhimento extends javax.swing.JDialog {

    private Log log;
    private AcolhimentoController ac;
    private ArrayList<String> listaInformacoesPaciente;
    ArrayList<JPanel> listaDePanel;

    /**
     * Creates new form Acolhimento
     */
    public Acolhimento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        log = new Log();
        ac = new AcolhimentoController();
        listaInformacoesPaciente = new ArrayList<>();
        listaDePanel = new ArrayList<>();
        listaDePanel.add(panelInformacoesPaciente);
        listaDePanel.add(panelInformacoesAgravo);
        listaDePanel.add(panelInformacoesProfissionaisPaciente);
        listaDePanel.add(panelOrigemEncaminhamento);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelInformacoesPaciente = new javax.swing.JPanel();
        labelTituloInformacoesPaciente = new javax.swing.JLabel();
        labelSUS = new javax.swing.JLabel();
        javax.swing.JTextField campoSUS = new javax.swing.JTextField();
        labelNomePaciente = new javax.swing.JLabel();
        campoNomePaciente = new javax.swing.JTextField();
        labelSexo = new javax.swing.JLabel();
        campoSexo = new javax.swing.JComboBox<>();
        labelDataNascimento = new javax.swing.JLabel();
        campoDataNascimento = new javax.swing.JTextField();
        labelNaturalidade = new javax.swing.JLabel();
        campoNaturalidade = new javax.swing.JTextField();
        labelNomeMae = new javax.swing.JLabel();
        campoNomeMae = new javax.swing.JTextField();
        labelEndereco = new javax.swing.JLabel();
        campoEndereco = new javax.swing.JTextField();
        labelCelular = new javax.swing.JLabel();
        campoCelular = new javax.swing.JTextField();
        labelEscolaridade = new javax.swing.JLabel();
        campoEscolaridade = new javax.swing.JComboBox<>();
        botaoLimparInformacoesPaciente = new javax.swing.JButton();
        panelOrigemEncaminhamento = new javax.swing.JPanel();
        labelOrigemEncaminhamento = new javax.swing.JLabel();
        checkINSS = new javax.swing.JCheckBox();
        checkSUS = new javax.swing.JCheckBox();
        checkEmpresa = new javax.swing.JCheckBox();
        checkSindicato = new javax.swing.JCheckBox();
        checkMunicipio = new javax.swing.JCheckBox();
        checkSem = new javax.swing.JCheckBox();
        checkServMedicoPart = new javax.swing.JCheckBox();
        checkUnidade = new javax.swing.JCheckBox();
        checkOutro = new javax.swing.JCheckBox();
        campoMunicipioUnidadeOUOutro = new javax.swing.JTextField();
        botaoLimparOrigemEncaminhamento = new javax.swing.JButton();
        panelInformacoesProfissionaisPaciente = new javax.swing.JPanel();
        labelTituloInformacoesProfissionaisPaciente = new javax.swing.JLabel();
        labelProfisssao = new javax.swing.JLabel();
        labelCBO = new javax.swing.JLabel();
        campoCBO = new javax.swing.JTextField();
        labelEmpresa = new javax.swing.JLabel();
        campoEmpresa = new javax.swing.JTextField();
        labelRelacaoTrabalho = new javax.swing.JLabel();
        campoRelacaoTrabalho = new javax.swing.JComboBox<>();
        campoMercadoInformal = new javax.swing.JTextField();
        labelSituacaoTrabalho = new javax.swing.JLabel();
        campoSituacaoTrabalho = new javax.swing.JComboBox<>();
        labelCarteiraTrabalho = new javax.swing.JLabel();
        campoCarteiraTrabalho = new javax.swing.JComboBox<>();
        labelObjetivoConsulta = new javax.swing.JLabel();
        campoObjetivoConsulta = new javax.swing.JComboBox<>();
        campoOutroObjetivoConsulta = new javax.swing.JTextField();
        botaoLimparInformacoesProfissionaisPaciente = new javax.swing.JButton();
        botaoPesquisarProfissao = new javax.swing.JButton();
        campoProfissao = new javax.swing.JTextField();
        panelInformacoesAgravo = new javax.swing.JPanel();
        labelTituloInformacoesAgravo = new javax.swing.JLabel();
        labelEmissaoCAT = new javax.swing.JLabel();
        campoEmissaoCAT = new javax.swing.JComboBox<>();
        labelBeneficiosPrevidenciarios = new javax.swing.JLabel();
        campoBeneficiosPrevidenciarios = new javax.swing.JComboBox<>();
        labelLaudoAposentadoriaDesdeQuando = new javax.swing.JLabel();
        campoLaudoAposentadoriaDesdeQuando = new javax.swing.JTextField();
        labelFisioterapiaAnteriormente = new javax.swing.JLabel();
        campoFisioterapiaAnteriormente = new javax.swing.JComboBox<>();
        botaoLimparInformacoesRelacionadasAgravo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        botaoSalvar = new javax.swing.JButton();
        botaoLimparTudo = new javax.swing.JButton();
        botaoVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panelInformacoesPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelTituloInformacoesPaciente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelTituloInformacoesPaciente.setLabelFor(panelInformacoesPaciente);
        labelTituloInformacoesPaciente.setText("Informações sobre o Paciente:");

        labelSUS.setLabelFor(campoSUS);
        labelSUS.setText("Cartão SUS:");

        campoSUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoSUSActionPerformed(evt);
            }
        });

        labelNomePaciente.setLabelFor(campoNomePaciente);
        labelNomePaciente.setText("Nome Completo:");

        campoNomePaciente.setToolTipText("Nome do Paciente");

        labelSexo.setLabelFor(campoSexo);
        labelSexo.setText("Sexo:");

        campoSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Feminino", "Outro" }));

        labelDataNascimento.setLabelFor(campoDataNascimento);
        labelDataNascimento.setText("Data de nascimento:");

        labelNaturalidade.setLabelFor(campoNaturalidade);
        labelNaturalidade.setText("Naturalidade:");

        labelNomeMae.setLabelFor(campoNomeMae);
        labelNomeMae.setText("Nome da mãe:");

        labelEndereco.setLabelFor(campoEndereco);
        labelEndereco.setText("Endereço:");

        labelCelular.setLabelFor(campoCelular);
        labelCelular.setText("Celular:");

        labelEscolaridade.setLabelFor(campoEscolaridade);
        labelEscolaridade.setText("Escolaridade:");

        campoEscolaridade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não sabe ler/Escrever", "1o Grau incompleto", "Ensino médio incompleto", "Superior Incompleto", "Especialização/Residencia", "1o Grau Completo", "Ensino médio completo", "Superior completo", "Mestrado", "Doutorado" }));
        campoEscolaridade.setSelectedIndex(6);

        botaoLimparInformacoesPaciente.setText("Limpar");
        botaoLimparInformacoesPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparInformacoesPacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInformacoesPacienteLayout = new javax.swing.GroupLayout(panelInformacoesPaciente);
        panelInformacoesPaciente.setLayout(panelInformacoesPacienteLayout);
        panelInformacoesPacienteLayout.setHorizontalGroup(
            panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformacoesPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTituloInformacoesPaciente)
                    .addGroup(panelInformacoesPacienteLayout.createSequentialGroup()
                        .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNomePaciente)
                            .addComponent(labelSexo)
                            .addComponent(labelSUS))
                        .addGap(24, 24, 24)
                        .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoSUS)
                            .addComponent(campoNomePaciente)
                            .addComponent(campoSexo, 0, 203, Short.MAX_VALUE)))
                    .addGroup(panelInformacoesPacienteLayout.createSequentialGroup()
                        .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDataNascimento)
                            .addComponent(labelNaturalidade)
                            .addComponent(labelNomeMae)
                            .addComponent(labelEndereco)
                            .addComponent(labelCelular)
                            .addComponent(labelEscolaridade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(botaoLimparInformacoesPaciente)
                                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoNaturalidade)
                                    .addComponent(campoNomeMae)
                                    .addComponent(campoEndereco)
                                    .addComponent(campoCelular)
                                    .addComponent(campoEscolaridade, 0, 203, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelInformacoesPacienteLayout.setVerticalGroup(
            panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInformacoesPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTituloInformacoesPaciente)
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSUS)
                    .addComponent(campoSUS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNomePaciente)
                    .addComponent(campoNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSexo)
                    .addComponent(campoSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDataNascimento)
                    .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNaturalidade)
                    .addComponent(campoNaturalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInformacoesPacienteLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(labelNomeMae)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInformacoesPacienteLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoNomeMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEndereco)
                    .addComponent(campoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCelular)
                    .addComponent(campoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(panelInformacoesPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEscolaridade)
                    .addComponent(campoEscolaridade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(botaoLimparInformacoesPaciente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelOrigemEncaminhamento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelOrigemEncaminhamento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelOrigemEncaminhamento.setLabelFor(panelOrigemEncaminhamento);
        labelOrigemEncaminhamento.setText("Origem do Encaminhamento:");

        checkINSS.setText("INSS");
        checkINSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkINSSActionPerformed(evt);
            }
        });

        checkSUS.setText("SUS");

        checkEmpresa.setText("Empresa");

        checkSindicato.setText("Sindicato");

        checkMunicipio.setText("Município");

        checkSem.setText("Sem");

        checkServMedicoPart.setText("Serv. Médico Part.");
        checkServMedicoPart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkServMedicoPartActionPerformed(evt);
            }
        });

        checkUnidade.setText("Unidade");

        checkOutro.setText("Outro");
        checkOutro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutroActionPerformed(evt);
            }
        });

        campoMunicipioUnidadeOUOutro.setToolTipText("Município, Unidade ou outro...");
        campoMunicipioUnidadeOUOutro.setEnabled(false);
        campoMunicipioUnidadeOUOutro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoMunicipioUnidadeOUOutroActionPerformed(evt);
            }
        });

        botaoLimparOrigemEncaminhamento.setText("Limpar");
        botaoLimparOrigemEncaminhamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparOrigemEncaminhamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOrigemEncaminhamentoLayout = new javax.swing.GroupLayout(panelOrigemEncaminhamento);
        panelOrigemEncaminhamento.setLayout(panelOrigemEncaminhamentoLayout);
        panelOrigemEncaminhamentoLayout.setHorizontalGroup(
            panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrigemEncaminhamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOrigemEncaminhamentoLayout.createSequentialGroup()
                        .addGroup(panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelOrigemEncaminhamento)
                            .addGroup(panelOrigemEncaminhamentoLayout.createSequentialGroup()
                                .addGroup(panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkINSS)
                                    .addComponent(checkSindicato)
                                    .addComponent(checkServMedicoPart))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                                .addGroup(panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkMunicipio)
                                    .addComponent(checkUnidade)
                                    .addComponent(checkSUS))
                                .addGap(71, 71, 71)
                                .addGroup(panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkSem)
                                    .addComponent(checkEmpresa)
                                    .addComponent(checkOutro))))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOrigemEncaminhamentoLayout.createSequentialGroup()
                        .addComponent(campoMunicipioUnidadeOUOutro)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOrigemEncaminhamentoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoLimparOrigemEncaminhamento)
                .addContainerGap())
        );
        panelOrigemEncaminhamentoLayout.setVerticalGroup(
            panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrigemEncaminhamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelOrigemEncaminhamento)
                .addGap(18, 18, 18)
                .addGroup(panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOrigemEncaminhamentoLayout.createSequentialGroup()
                        .addGroup(panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkINSS)
                            .addComponent(checkEmpresa))
                        .addGroup(panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelOrigemEncaminhamentoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(checkSindicato))
                            .addGroup(panelOrigemEncaminhamentoLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(checkSem)))
                        .addGap(18, 18, 18)
                        .addGroup(panelOrigemEncaminhamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkOutro)
                            .addComponent(checkServMedicoPart)))
                    .addGroup(panelOrigemEncaminhamentoLayout.createSequentialGroup()
                        .addComponent(checkSUS)
                        .addGap(26, 26, 26)
                        .addComponent(checkMunicipio)
                        .addGap(18, 18, 18)
                        .addComponent(checkUnidade)))
                .addGap(18, 18, 18)
                .addComponent(campoMunicipioUnidadeOUOutro, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoLimparOrigemEncaminhamento)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        panelInformacoesProfissionaisPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelTituloInformacoesProfissionaisPaciente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelTituloInformacoesProfissionaisPaciente.setLabelFor(panelInformacoesProfissionaisPaciente);
        labelTituloInformacoesProfissionaisPaciente.setText("Informações Profissionais do Paciente:");

        labelProfisssao.setLabelFor(campoProfissao);
        labelProfisssao.setText("Profissao:");

        labelCBO.setLabelFor(campoCBO);
        labelCBO.setText("CBO:");

        campoCBO.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        campoCBO.setEnabled(false);
        campoCBO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCBOActionPerformed(evt);
            }
        });

        labelEmpresa.setLabelFor(campoEmpresa);
        labelEmpresa.setText("Empresa:");

        labelRelacaoTrabalho.setLabelFor(campoRelacaoTrabalho);
        labelRelacaoTrabalho.setText("Relação de Trabalho:");

        campoRelacaoTrabalho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Assalariado", "Desempregado", "Aposentado", "Empregado", "Autônomo", "Mercado Informal" }));
        campoRelacaoTrabalho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                campoRelacaoTrabalhoItemStateChanged(evt);
            }
        });

        campoMercadoInformal.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        campoMercadoInformal.setEnabled(false);

        labelSituacaoTrabalho.setLabelFor(campoSituacaoTrabalho);
        labelSituacaoTrabalho.setText("Situação de Trabalho:");

        campoSituacaoTrabalho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ativo na mesma ocupação", "Empregado", "Afastado", "Autonomo", "Aposentado", "Mercado Informal" }));
        campoSituacaoTrabalho.setSelectedIndex(2);

        labelCarteiraTrabalho.setLabelFor(campoCarteiraTrabalho);
        labelCarteiraTrabalho.setText("Carteira de Trabalho:");

        campoCarteiraTrabalho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Assalariado com carteira", "Assalariado com dispensa de assinatura da carteira pelo RJU", "Não assalariado", "Assalariado sem carteira assinada", "Não se aplica" }));

        labelObjetivoConsulta.setText("Objetivo Da Consulta:");

        campoObjetivoConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Esclarecimento diagnóstico", "Tratamento", "Outro" }));
        campoObjetivoConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoObjetivoConsultaActionPerformed(evt);
            }
        });

        campoOutroObjetivoConsulta.setEnabled(false);
        campoOutroObjetivoConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoOutroObjetivoConsultaActionPerformed(evt);
            }
        });

        botaoLimparInformacoesProfissionaisPaciente.setText("Limpar");
        botaoLimparInformacoesProfissionaisPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparInformacoesProfissionaisPacienteActionPerformed(evt);
            }
        });

        botaoPesquisarProfissao.setText("Pesquisar Profissão");

        campoProfissao.setEditable(false);
        campoProfissao.setEnabled(false);

        javax.swing.GroupLayout panelInformacoesProfissionaisPacienteLayout = new javax.swing.GroupLayout(panelInformacoesProfissionaisPaciente);
        panelInformacoesProfissionaisPaciente.setLayout(panelInformacoesProfissionaisPacienteLayout);
        panelInformacoesProfissionaisPacienteLayout.setHorizontalGroup(
            panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                        .addComponent(labelTituloInformacoesProfissionaisPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                        .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                                .addComponent(labelObjetivoConsulta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoObjetivoConsulta, 0, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoOutroObjetivoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(labelCarteiraTrabalho)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoCarteiraTrabalho, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                                .addComponent(labelSituacaoTrabalho)
                                .addGap(5, 5, 5)
                                .addComponent(campoSituacaoTrabalho, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                                .addComponent(labelRelacaoTrabalho)
                                .addGap(8, 8, 8)
                                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoMercadoInformal)
                                    .addComponent(campoRelacaoTrabalho, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(botaoLimparInformacoesProfissionaisPaciente))
                            .addGroup(panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelEmpresa)
                                    .addComponent(labelCBO)
                                    .addComponent(labelProfisssao))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                                        .addComponent(campoProfissao, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(botaoPesquisarProfissao))
                                    .addComponent(campoEmpresa, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(campoCBO, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(30, 30, 30))))
        );
        panelInformacoesProfissionaisPacienteLayout.setVerticalGroup(
            panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformacoesProfissionaisPacienteLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(labelTituloInformacoesProfissionaisPaciente)
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelProfisssao)
                        .addComponent(botaoPesquisarProfissao)))
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCBO)
                    .addComponent(campoCBO, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEmpresa)
                    .addComponent(campoEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelRelacaoTrabalho)
                    .addComponent(campoRelacaoTrabalho, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoMercadoInformal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoSituacaoTrabalho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSituacaoTrabalho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCarteiraTrabalho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCarteiraTrabalho))
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesProfissionaisPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelObjetivoConsulta)
                    .addComponent(campoObjetivoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoOutroObjetivoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(botaoLimparInformacoesProfissionaisPaciente)
                .addGap(71, 71, 71))
        );

        panelInformacoesAgravo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelTituloInformacoesAgravo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelTituloInformacoesAgravo.setText("Informações relacionadas ao agravo:");

        labelEmissaoCAT.setText("Emissão de CAT:");

        campoEmissaoCAT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Emitida", "Não emitida", "Não sabe", "Não se aplica" }));

        labelBeneficiosPrevidenciarios.setText("Beneficios Previdenciários:");

        campoBeneficiosPrevidenciarios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não recebe aposentadoria", "1º Grau", "Auxílio", "Auxílio acidente", "Acidentária", "Aposentadoria Previdenciária", "Aposentadoria tempo de serviço, idade ou especial", "Não se aplica", "Não sabe informar" }));

        labelLaudoAposentadoriaDesdeQuando.setText("Laudo/Aposentadoria, desde quando?");

        labelFisioterapiaAnteriormente.setText("Realizou fisioterapia anteriormente?");

        campoFisioterapiaAnteriormente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sim", "Não" }));
        campoFisioterapiaAnteriormente.setSelectedIndex(1);

        botaoLimparInformacoesRelacionadasAgravo.setText("Limpar");
        botaoLimparInformacoesRelacionadasAgravo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparInformacoesRelacionadasAgravoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInformacoesAgravoLayout = new javax.swing.GroupLayout(panelInformacoesAgravo);
        panelInformacoesAgravo.setLayout(panelInformacoesAgravoLayout);
        panelInformacoesAgravoLayout.setHorizontalGroup(
            panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformacoesAgravoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botaoLimparInformacoesRelacionadasAgravo)
                    .addGroup(panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(campoFisioterapiaAnteriormente, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(campoEmissaoCAT, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(campoBeneficiosPrevidenciarios, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelFisioterapiaAnteriormente)
                                    .addComponent(labelBeneficiosPrevidenciarios)
                                    .addComponent(labelTituloInformacoesAgravo)
                                    .addComponent(labelEmissaoCAT)
                                    .addGroup(panelInformacoesAgravoLayout.createSequentialGroup()
                                        .addComponent(labelLaudoAposentadoriaDesdeQuando)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(campoLaudoAposentadoriaDesdeQuando, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(28, 28, 28))
        );
        panelInformacoesAgravoLayout.setVerticalGroup(
            panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformacoesAgravoLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(labelTituloInformacoesAgravo)
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmissaoCAT)
                    .addComponent(campoEmissaoCAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBeneficiosPrevidenciarios)
                    .addComponent(campoBeneficiosPrevidenciarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLaudoAposentadoriaDesdeQuando)
                    .addComponent(campoLaudoAposentadoriaDesdeQuando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelInformacoesAgravoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFisioterapiaAnteriormente)
                    .addComponent(campoFisioterapiaAnteriormente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(botaoLimparInformacoesRelacionadasAgravo)
                .addGap(15, 15, 15))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        botaoSalvar.setText("Salvar e Realizar Avaliação de Enfermagem");
        botaoSalvar.setToolTipText("Salvar e Realizar Avaliação de Enfermagem");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 227, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(botaoSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        botaoLimparTudo.setText("Limpar Tudo");
        botaoLimparTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparTudoActionPerformed(evt);
            }
        });

        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botaoLimparTudo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(panelInformacoesPaciente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelOrigemEncaminhamento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelInformacoesAgravo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelInformacoesProfissionaisPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelInformacoesPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelInformacoesProfissionaisPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelInformacoesAgravo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelOrigemEncaminhamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(botaoLimparTudo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoSUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoSUSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoSUSActionPerformed

    private void campoMunicipioUnidadeOUOutroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoMunicipioUnidadeOUOutroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoMunicipioUnidadeOUOutroActionPerformed

    private void checkINSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkINSSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkINSSActionPerformed

    private void checkServMedicoPartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkServMedicoPartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkServMedicoPartActionPerformed

    /**
     *
     * Se o checkbox com valor outro tá selecionado, deixa o textfield visivel
     *
     * @param evt
     */
    private void checkOutroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutroActionPerformed

        try {
            if (this.checkOutro.isSelected()) {
                this.campoMunicipioUnidadeOUOutro.setEnabled(true);
            } else {
                this.campoMunicipioUnidadeOUOutro.setEnabled(false);
            }
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(this, erro.getMessage());
        }
    }//GEN-LAST:event_checkOutroActionPerformed

    private void campoCBOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCBOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCBOActionPerformed

    /**
     *
     * Limpa o texto do panel de informacoes do paciente
     *
     * @param evt
     */
    private void botaoLimparInformacoesPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparInformacoesPacienteActionPerformed
        try {
            limpaTextFields(this.panelInformacoesPaciente);
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(this, erro.getMessage());
        }
    }//GEN-LAST:event_botaoLimparInformacoesPacienteActionPerformed

    private void campoOutroObjetivoConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoOutroObjetivoConsultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoOutroObjetivoConsultaActionPerformed

    /**
     *
     * Voltar para a tela principal apenas escondendo a tela do acolhimento
     *
     * @param evt
     */
    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        try {
            this.setLocationRelativeTo(null);
            this.setVisible(false);
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
        }

    }//GEN-LAST:event_botaoVoltarActionPerformed

    /**
     * Metodo para salvar todas infos dos panels em uma lista
     *
     * @param panel
     * @return
     */
    public ArrayList<String> getInfoPorPanel(ArrayList<JPanel> listaDePanel) {
        ArrayList<String> listaInformacoesPanel = new ArrayList<>();
        try {
            for (JPanel panel : listaDePanel) {
                /**
                 * Pega tudo que está nos TEXTFIELDS e adiciona na lista
                 */
                for (Component c : panel.getComponents()) {
                    if (c.getClass().toString().contains("javax.swing.JTextField")) {
                        JTextField temp = (JTextField) c;
                        listaInformacoesPanel.add(temp.getText());
                    }
                    if (c.getClass().toString().contains("javax.swing.JComboBox")) {
                        JComboBox temp = (JComboBox) c;
                        listaInformacoesPanel.add(temp.getSelectedItem().toString());
                    }
                }
            }

        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
        return listaInformacoesPanel;
    }

    /**
     * Ao clickar no botao salvar, pega todos panels, e procura texto em todos
     * textfields, combobox, checkbox e etc e envia pra controller tratar
     *
     * @param evt
     */
    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        try {
            ac.salvar(getInfoPorPanel(listaDePanel));
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }//GEN-LAST:event_botaoSalvarActionPerformed

    /**
     * Se selecionar o item mercado informal no combobox, o textfield para
     * especificar fica visivel
     *
     * @param evt
     */
    private void campoRelacaoTrabalhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_campoRelacaoTrabalhoItemStateChanged
        try {
            if (campoRelacaoTrabalho.getSelectedItem().toString().equals("Mercado Informal")) {
                this.campoMercadoInformal.setEnabled(true);
            } else {
                this.campoMercadoInformal.setEnabled(false);
            }
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(this, erro.getMessage());
        }

    }//GEN-LAST:event_campoRelacaoTrabalhoItemStateChanged

    /**
     *
     * Se selecionar que o objetivo da consulta for outro, deixa enabled o
     * textfield para especificar o outro
     *
     * @param evt
     */
    private void campoObjetivoConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoObjetivoConsultaActionPerformed
        try {
            if (this.campoObjetivoConsulta.getSelectedItem().toString().equals("Outro")) {
                this.campoOutroObjetivoConsulta.setEnabled(true);
            } else {
                this.campoOutroObjetivoConsulta.setEnabled(false);
            }
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(this, erro.getMessage());
        }
    }//GEN-LAST:event_campoObjetivoConsultaActionPerformed

    /**
     * limpa o texto de um panel em especifico
     *
     * @param panel
     */
    private void limpaTextFields(JPanel panel) {
        try {
            for (Component c : panel.getComponents()) {
                if (c.getClass().toString().contains("javax.swing.JTextField")) {
                    JTextField temp = (JTextField) c;
                    temp.setText("");
                }
            }
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }

    /**
     *
     * Limpa o texto do panel de informacoes do paciente
     *
     * @param evt
     */
    private void botaoLimparTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparTudoActionPerformed
        try {
            for (JPanel panel : listaDePanel) {
                limpaTextFields(panel);
            }
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(this, erro.getMessage());
        }
    }//GEN-LAST:event_botaoLimparTudoActionPerformed

    /**
     *
     * Limpa o texto do panel de informacoes profissionais do paciente
     *
     * @param evt
     */
    private void botaoLimparInformacoesProfissionaisPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparInformacoesProfissionaisPacienteActionPerformed
        try {
            limpaTextFields(this.panelInformacoesProfissionaisPaciente);
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(this, erro.getMessage());
        }
    }//GEN-LAST:event_botaoLimparInformacoesProfissionaisPacienteActionPerformed

    /**
     *
     * Limpa o texto do panel de informacoes relacionadas ao agravo
     *
     * @param evt
     */
    private void botaoLimparInformacoesRelacionadasAgravoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparInformacoesRelacionadasAgravoActionPerformed
        try {
            limpaTextFields(this.panelInformacoesAgravo);
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(this, erro.getMessage());
        }
    }//GEN-LAST:event_botaoLimparInformacoesRelacionadasAgravoActionPerformed

    /**
     *
     * Limpa o texto do panel de origem do encaminhamento
     *
     * @param evt
     *
     */
    private void botaoLimparOrigemEncaminhamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparOrigemEncaminhamentoActionPerformed
        try {
            limpaTextFields(this.panelOrigemEncaminhamento);
        } catch (Exception erro) {
            log.EscreveNoLog(erro.getMessage());
            JOptionPane.showMessageDialog(this, erro.getMessage());
        }
    }//GEN-LAST:event_botaoLimparOrigemEncaminhamentoActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoLimparInformacoesPaciente;
    private javax.swing.JButton botaoLimparInformacoesProfissionaisPaciente;
    private javax.swing.JButton botaoLimparInformacoesRelacionadasAgravo;
    private javax.swing.JButton botaoLimparOrigemEncaminhamento;
    private javax.swing.JButton botaoLimparTudo;
    private javax.swing.JButton botaoPesquisarProfissao;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JComboBox<String> campoBeneficiosPrevidenciarios;
    private javax.swing.JTextField campoCBO;
    private javax.swing.JComboBox<String> campoCarteiraTrabalho;
    private javax.swing.JTextField campoCelular;
    private javax.swing.JTextField campoDataNascimento;
    private javax.swing.JComboBox<String> campoEmissaoCAT;
    private javax.swing.JTextField campoEmpresa;
    private javax.swing.JTextField campoEndereco;
    private javax.swing.JComboBox<String> campoEscolaridade;
    private javax.swing.JComboBox<String> campoFisioterapiaAnteriormente;
    private javax.swing.JTextField campoLaudoAposentadoriaDesdeQuando;
    private javax.swing.JTextField campoMercadoInformal;
    private javax.swing.JTextField campoMunicipioUnidadeOUOutro;
    private javax.swing.JTextField campoNaturalidade;
    private javax.swing.JTextField campoNomeMae;
    private javax.swing.JTextField campoNomePaciente;
    private javax.swing.JComboBox<String> campoObjetivoConsulta;
    private javax.swing.JTextField campoOutroObjetivoConsulta;
    private javax.swing.JTextField campoProfissao;
    private javax.swing.JComboBox<String> campoRelacaoTrabalho;
    private javax.swing.JComboBox<String> campoSexo;
    private javax.swing.JComboBox<String> campoSituacaoTrabalho;
    private javax.swing.JCheckBox checkEmpresa;
    private javax.swing.JCheckBox checkINSS;
    private javax.swing.JCheckBox checkMunicipio;
    private javax.swing.JCheckBox checkOutro;
    private javax.swing.JCheckBox checkSUS;
    private javax.swing.JCheckBox checkSem;
    private javax.swing.JCheckBox checkServMedicoPart;
    private javax.swing.JCheckBox checkSindicato;
    private javax.swing.JCheckBox checkUnidade;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelBeneficiosPrevidenciarios;
    private javax.swing.JLabel labelCBO;
    private javax.swing.JLabel labelCarteiraTrabalho;
    private javax.swing.JLabel labelCelular;
    private javax.swing.JLabel labelDataNascimento;
    private javax.swing.JLabel labelEmissaoCAT;
    private javax.swing.JLabel labelEmpresa;
    private javax.swing.JLabel labelEndereco;
    private javax.swing.JLabel labelEscolaridade;
    private javax.swing.JLabel labelFisioterapiaAnteriormente;
    private javax.swing.JLabel labelLaudoAposentadoriaDesdeQuando;
    private javax.swing.JLabel labelNaturalidade;
    private javax.swing.JLabel labelNomeMae;
    private javax.swing.JLabel labelNomePaciente;
    private javax.swing.JLabel labelObjetivoConsulta;
    private javax.swing.JLabel labelOrigemEncaminhamento;
    private javax.swing.JLabel labelProfisssao;
    private javax.swing.JLabel labelRelacaoTrabalho;
    private javax.swing.JLabel labelSUS;
    private javax.swing.JLabel labelSexo;
    private javax.swing.JLabel labelSituacaoTrabalho;
    private javax.swing.JLabel labelTituloInformacoesAgravo;
    private javax.swing.JLabel labelTituloInformacoesPaciente;
    private javax.swing.JLabel labelTituloInformacoesProfissionaisPaciente;
    private javax.swing.JPanel panelInformacoesAgravo;
    private javax.swing.JPanel panelInformacoesPaciente;
    private javax.swing.JPanel panelInformacoesProfissionaisPaciente;
    private javax.swing.JPanel panelOrigemEncaminhamento;
    // End of variables declaration//GEN-END:variables

}
